<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="43ee3fd7-75e4-4f3f-a576-5629b79def89" name="Changes" comment="updated example">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/information_retrieval_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/retrieve/information_retrieval_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node/knownHosts.go" beforeDir="false" afterPath="$PROJECT_DIR$/node/knownHosts.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="7fb900f930edf0df75e0335e5e27821af40b0297" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
    <option name="urls">
      <list>
        <option value="file://$USER_HOME$/go" />
      </list>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/node/node.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="22uvIA067pWgN1ZvBbM5FVDQjh9" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="TODO_SCOPE" value="All Places" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File" value="go" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../margarine" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.sourceCode.Go" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$/examples" />
      <recent name="$PROJECT_DIR$/examples/ohce" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/retrieve" />
      <recent name="$PROJECT_DIR$/betternode" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/node" />
      <recent name="$PROJECT_DIR$/traverse" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestHostType in github.com/a-shine/butter/node">
    <configuration name="Build bibliohraphy" type="BIBTEX_RUN_CONFIGURATION" factoryName="LaTeX configuration factory">
      <texify-bibtex>
        <compiler>BIBTEX</compiler>
        <compiler-path />
        <compiler-arguments />
        <envs>
          <env name="BIBINPUTS" value="$PROJECT_DIR$/docs" />
          <env name="BSTINPUTS" value="$PROJECT_DIR$/docs:" />
        </envs>
        <main-file>$PROJECT_DIR$/docs/main.tex</main-file>
        <aux-dir>$USER_HOME$</aux-dir>
      </texify-bibtex>
      <method v="2" />
    </configuration>
    <configuration default="true" type="BIBTEX_RUN_CONFIGURATION" factoryName="LaTeX configuration factory">
      <texify-bibtex>
        <compiler />
        <compiler-path />
        <compiler-arguments />
        <envs />
        <main-file>$USER_HOME$</main-file>
        <aux-dir>$USER_HOME$</aux-dir>
      </texify-bibtex>
      <method v="2" />
    </configuration>
    <configuration name="Go build chat" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="butter" />
      <working_directory value="$PROJECT_DIR$/examples/chat" />
      <kind value="PACKAGE" />
      <package value="chat" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/examples/chat/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Go build wiki" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="butter" />
      <working_directory value="$PROJECT_DIR$/examples/wiki" />
      <kind value="PACKAGE" />
      <package value="wiki" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/examples/wiki/wiki.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestBiggestClass in github.com/a-shine/butter/node" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="butter" />
      <working_directory value="$PROJECT_DIR$/node" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/a-shine/butter/node" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBiggestClass\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestHostType in github.com/a-shine/butter/node" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="butter" />
      <working_directory value="$PROJECT_DIR$/node" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/a-shine/butter/node" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestHostType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Build documentation" type="LATEX_RUN_CONFIGURATION" factoryName="LaTeX configuration factory" temporary="true">
      <texify>
        <compiler>PDFLATEX</compiler>
        <compiler-path />
        <sumatra-path />
        <pdf-viewer>EVINCE</pdf-viewer>
        <viewer-command />
        <compiler-arguments />
        <envs />
        <main-file>$PROJECT_DIR$/docs/main.tex</main-file>
        <output-path>$PROJECT_DIR$/out</output-path>
        <auxil-path>{projectDir}/auxil</auxil-path>
        <compile-twice>false</compile-twice>
        <output-format>PDF</output-format>
        <latex-distribution>TEXLIVE</latex-distribution>
        <has-been-run>true</has-been-run>
        <bib-run-config>[BibTeX.Build bibliohraphy]</bib-run-config>
        <makeindex-run-config>[]</makeindex-run-config>
      </texify>
      <method v="2" />
    </configuration>
    <configuration default="true" type="LATEX_RUN_CONFIGURATION" factoryName="LaTeX configuration factory">
      <texify>
        <compiler>PDFLATEX</compiler>
        <compiler-path />
        <sumatra-path />
        <pdf-viewer>EVINCE</pdf-viewer>
        <viewer-command />
        <compiler-arguments />
        <envs />
        <main-file />
        <output-path>{projectDir}/out</output-path>
        <auxil-path>{projectDir}/auxil</auxil-path>
        <compile-twice>false</compile-twice>
        <output-format>PDF</output-format>
        <latex-distribution>TEXLIVE</latex-distribution>
        <has-been-run>false</has-been-run>
        <bib-run-config>[]</bib-run-config>
        <makeindex-run-config>[]</makeindex-run-config>
      </texify>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="BibTeX.Build bibliohraphy" />
      <item itemvalue="Go Build.Go build chat" />
      <item itemvalue="Go Build.Go build wiki" />
      <item itemvalue="Go Test.TestBiggestClass in github.com/a-shine/butter/node" />
      <item itemvalue="Go Test.TestHostType in github.com/a-shine/butter/node" />
      <item itemvalue="LaTeX.Build documentation" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestHostType in github.com/a-shine/butter/node" />
        <item itemvalue="Go Test.TestBiggestClass in github.com/a-shine/butter/node" />
        <item itemvalue="LaTeX.Build documentation" />
        <item itemvalue="LaTeX.Build documentation" />
        <item itemvalue="LaTeX.Build documentation" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="43ee3fd7-75e4-4f3f-a576-5629b79def89" name="Changes" comment="" />
      <created>1640700215777</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1640700215777</updated>
      <workItem from="1640700224378" duration="19000" />
      <workItem from="1644749660783" duration="62000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="overlay-abstraction" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="some cleaned up code" />
    <MESSAGE value="more comments" />
    <MESSAGE value="this works" />
    <MESSAGE value="working with more comments" />
    <MESSAGE value="added graceful shutdown" />
    <MESSAGE value="cleaned up node implementation" />
    <MESSAGE value="cleaned up node package" />
    <MESSAGE value="added instructions on how to run an example" />
    <MESSAGE value="updated chat example" />
    <MESSAGE value="wiki demo working but not fully tested" />
    <MESSAGE value="added doc stuff" />
    <MESSAGE value="working abstraction of node and overlay network" />
    <MESSAGE value="fixed merge issues" />
    <MESSAGE value="fixed examples" />
    <MESSAGE value="implemented ability to define several client behaviours" />
    <MESSAGE value="switched to retrieval by hash as apposed to by uuid" />
    <MESSAGE value="added is empty method" />
    <MESSAGE value="not finished but want to save progress" />
    <MESSAGE value="compiles" />
    <MESSAGE value="presentation slides" />
    <MESSAGE value="maintaining known host list" />
    <MESSAGE value="seems to work" />
    <MESSAGE value="tested the known host management functionality" />
    <MESSAGE value="presentation slides semi completed" />
    <MESSAGE value="updated example" />
    <option name="LAST_COMMIT_MESSAGE" value="updated example" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>